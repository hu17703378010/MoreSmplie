//
//  TopDetalisViewController.m
//  ILoveMovie
//
//  Created by lanou3g on 15/10/30.
//  Copyright © 2015年 lanou3g. All rights reserved.
//

#import "TopDetalisViewController.h"
#import "TopDetailsCollectionViewCell.h"
#import "TopDetalisCollectionReusableView.h"
#import "AAShareBubbles.h"
#import "UMSocial.h"
#import "TopObject.h"
#import "LoginViewController.h"
// 导演接口
#define kTopDetalis @"http://sfzdy.yingyongjingling.com:20610/video/topic/detail?topicId="
#define kTopDeta @"&versionCode=17&versionName=1.1.0&phoneNumber=&userToken=&clientType=IPHONE"
// 作品
#define kMovieTopDetalis @"http://sfzdy.yingyongjingling.com:20610/video/topic/video/list?topicId="
#define kMovieTopDeta @"&versionCode=17&versionName=1.1.0&phoneNumber=&userToken=&clientType=IPHONE"
@interface TopDetalisViewController ()<UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout,UITableViewDataSource, UITableViewDelegate>

@property (nonatomic, strong)UICollectionView *collectionView;
@property (nonatomic, strong)NSMutableArray *directArray; // 接收解析导演数据
@property (nonatomic, strong)NSMutableArray *dataArray; // 接收作品数据
@property (nonatomic,retain)UIImageView *imageView;
@property (nonatomic,assign)BOOL isOpen;
@property (nonatomic,retain)UIBarButtonItem *item;
// 截屏 分享 收藏
@property (nonatomic, strong) UITableView *moreTableView;
@property (nonatomic, strong) NSString *contentString; // 分享的作品题目
@property (nonatomic, strong) TopDetalisCollectionReusableView *headView;
@property (nonatomic,retain)UIImageView *shareImageView;
@end

@implementation TopDetalisViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.tabBarController.tabBar.hidden = YES;
    self.edgesForExtendedLayout = UIRectEdgeNone;
    self.view.backgroundColor = [UIColor whiteColor];
    [self setUpDirectData];
    [self setUpData];
    self.item = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"iconfont-fenlei(1)"] style:(UIBarButtonItemStyleDone) target:self action:@selector(actionItemMore:)];
    self.navigationItem.rightBarButtonItem = self.item;
    
    // 左返回
    UIBarButtonItem *imageBarButton = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"iconfont-fanhui(1)"] imageWithRenderingMode:(UIImageRenderingModeAlwaysOriginal)] style:(UIBarButtonItemStylePlain) target:self action:@selector(actionImageBarButton:)];
    self.navigationItem.leftBarButtonItem = imageBarButton;
    
    // 右
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithImage:[[UIImage imageNamed:@"iconfont-fenlei(1)"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] style:(UIBarButtonItemStyleDone) target:self action:@selector(actionItemMore:)];
}

- (void)actionImageBarButton:(UIBarButtonItem *)imageBarButton
{
    [self.navigationController popViewControllerAnimated:YES];
}


// 弹出更多框
- (void)actionItemMore:(UIBarButtonItem *)item
{
    self.isOpen = !self.isOpen;
    if (self.isOpen) {
        [UIView animateWithDuration:0.5 animations:^{
            self.imageView.frame = CGRectMake(self.view.frame.size.width - 110, -15, 100, 100);
            // 打开图片交互
            self.imageView.userInteractionEnabled = YES;
        }];
    } else {
        [UIView animateWithDuration:0.2 animations:^{
            self.imageView.frame = CGRectMake(self.view.frame.size.width - 110, -140, 100,100);
        }];
    }
}

#pragma mark --- 更多框
- (void)addMoreButton
{
    // 更多框
    self.imageView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"moreKuang"]];
    self.imageView.frame = CGRectMake(self.view.frame.size.width - 110, -140, 100,130);
    self.isOpen = NO;
    [self.view addSubview:self.imageView];
    // 截屏等
    self.moreTableView = [[UITableView alloc] initWithFrame:CGRectMake(5, 25, 90, 60) style:(UITableViewStylePlain)];
    self.moreTableView.delegate = self;
    self.moreTableView.dataSource = self;
    // 取消分割线
    self.moreTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.imageView addSubview:self.moreTableView];
}



//  添加一个height参数, 用来接受lable自适应的高度
- (void)addSubViewWithHeight:(CGFloat)height
{
    UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc] init];
    layout.minimumInteritemSpacing = 20;
    layout.minimumLineSpacing = 20;
    layout.itemSize = CGSizeMake((kScreenWidth - 40 - 2*10) / 2, 150);
     layout.sectionInset = UIEdgeInsetsMake(20, 20, 20, 20);
    // 设置自适应表头高度
    layout.headerReferenceSize = CGSizeMake(0, height +250);
    
    self.collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 2, kScreenWidth, kScreenHeight - 70) collectionViewLayout:layout];
    self.collectionView.dataSource = self;
    self.collectionView.delegate = self;
    self.collectionView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.collectionView];
    
    // 注册cell
    [self.collectionView registerNib:[UINib nibWithNibName:@"TopDetailsCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"Cell"];
    // 注册表头
    [self.collectionView registerClass:[TopDetalisCollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"Header"];
}




// 分区数
- (NSInteger) numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}
// 分区行数
- (NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 2;
}
// 行高
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60/2.0;
}
// cell
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"cell";
    UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:(UITableViewCellStyleSubtitle) reuseIdentifier:identifier];
    
    // 每个Cell上的内容.图标
    if (indexPath.row == 0) {
        cell.textLabel.text = @"分享";
        cell.imageView.image = [UIImage imageNamed:@"share.jpg"];
    } else {
        cell.textLabel.text = @"收藏";
        cell.imageView.image = [UIImage imageNamed:@"collect.jpg"];
    }
    cell.textLabel.font = [UIFont systemFontOfSize:12];
    // 选中
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self actionItemMore:self.item];
    
    if (indexPath.row == 0) {
        // 判断是否登录, 如果没有登录, 就跳转到登录界面
        AVUser *user = [AVUser currentUser];
        if (user == nil) {
            LoginViewController *logVC = [[LoginViewController alloc] init];
            UINavigationController *naVC = [[UINavigationController alloc] initWithRootViewController:logVC];
            naVC.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
            [self presentViewController:naVC animated:YES completion:nil];
        } else{
        // 分享
        AVUser *user = [AVUser currentUser];
        if (user == nil) {
            LoginViewController *logVC = [[LoginViewController alloc] init];
            UINavigationController *naVC = [[UINavigationController alloc] initWithRootViewController:logVC];
            naVC.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
            [self presentViewController:naVC animated:YES completion:nil];
            return;
        }
        radius = 85;
        bubbleRadius = 32;
        _radiusSlider.value = radius;
        _bubbleRadiusSlider.value = bubbleRadius;
        
        _radiusLabel.text = [NSString stringWithFormat:@"%.0f", radius];
        _bubbleRadiusLabel.text = [NSString stringWithFormat:@"%.0f", bubbleRadius];
        if(shareBubbles) {
            shareBubbles = nil;
        }
        shareBubbles = [[AAShareBubbles alloc] initWithPoint:_shareButton.center radius:radius inView:self.view];
        shareBubbles.delegate = self;
        shareBubbles.bubbleRadius = bubbleRadius;
        shareBubbles.showFacebookBubble = YES;
        shareBubbles.showGooglePlusBubble = YES;
        shareBubbles.showTumblrBubble = YES;
        [shareBubbles show];
    }
    } else if (indexPath.row == 1) {
        // 收藏
        // 判断是否登录, 如果没有登录, 就跳转到登录界面
        AVUser *user = [AVUser currentUser];
        if (user == nil) {
            LoginViewController *logVC = [[LoginViewController alloc] init];
            UINavigationController *naVC = [[UINavigationController alloc] initWithRootViewController:logVC];
            naVC.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
            [self presentViewController:naVC animated:YES completion:nil];
            return;
        }
        
//判断是否收藏过了
        AVRelation *relation = [user relationforKey:@"TopObject"];
        NSArray *array =  [[relation query] findObjects:nil];
        for (TopObject *object in array) {
            if ([self.model.topicName isEqualToString:[object valueForKey:@"topicName"]]) {
                [self showAlterViewWithTitle:@"提示" Message:@"已收藏过了"];
                return;
            }
        }
        
//没收藏就去收藏
        TopObject *object = [[TopObject alloc]init];
        object.previewImage = self.model.previewImage;
        object.topicName = self.model.topicName;
        object.watchCount = self.model.watchCount;
        object.detailIntroduction = self.model.detailIntroduction;
        object.topicId = self.model.topicId;
        [object saveInBackgroundWithBlock:^(BOOL succeeded, NSError *error) {
            if (succeeded) {
                AVUser *user = [AVUser currentUser];
                AVRelation *relation = [user relationforKey:@"TopObject"];
                [relation addObject:object];
                [user saveInBackgroundWithBlock:^(BOOL succeeded, NSError *error) {
                    if (succeeded) {
                        [self showAlterViewWithTitle:@"提示" Message:@"收藏成功"];
                    }
                }];
            }
        }];
    
    }
}

- (void) transitionWithType:(NSString *) type WithSubtype:(NSString *) subtype ForView : (UIView *) view
{
    //创建CATransition对象
    CATransition *animation = [CATransition animation];
    //设置运动时间
    animation.duration = 0.7f;
    //设置运动type
    animation.type = type; //CameraIrisHollowClose
    if (subtype != nil) {
        //设置子类
        animation.subtype = subtype;
    }
    //设置运动速度
    animation.timingFunction = UIViewAnimationOptionCurveEaseInOut;
    [view.layer addAnimation:animation forKey:@"animation"];
}


- (void)webViewDidStartLoad:(UIWebView *)webView
{
    [SVProgressHUD show];
}
- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    [SVProgressHUD dismiss];
}

// 分享
-(void)aaShareBubbles:(AAShareBubbles *)shareBubbles tappedBubbleWithType:(AAShareBubbleType)bubbleType
{
    switch (bubbleType) {
        case AAShareBubbleTypeFacebook:
        {
            // // 友盟分享到新浪微博
            [self sharesToWay:UMShareToSina];
            
            break;
        }
            
        case AAShareBubbleTypeGooglePlus:
        {
            // 友盟分享到豆瓣
            [self sharesToWay:UMShareToDouban];
            
            break;
        }
            
        case AAShareBubbleTypeTumblr:
        {
            // // 友盟分享到人人
            
            [self sharesToWay:UMShareToRenren];
            break;
        }
        default:
            break;
    }
}
- (void)sharesToWay: (NSString *)way
{
    // // 友盟分享到人人
    [UMSocialAccountManager isOauthAndTokenNotExpired:way];
    //进入授权页面
    [UMSocialSnsPlatformManager getSocialPlatformWithName:way].loginClickHandler(self,[UMSocialControllerService defaultControllerService],YES,^(UMSocialResponseEntity *response){
        if (response.responseCode == UMSResponseCodeSuccess) {
            //获取微博用户名、uid、token等
            UMSocialAccountEntity *snsAccount = [[UMSocialAccountManager socialAccountDictionary] valueForKey:way];
            //进入你的分享内容编辑页面
            // 分享内容拼接
            self.contentString = self.model.topicName;
            for (int i = 0; i < self.dataArray.count; i++) {
                HeadLineModel *model = [[HeadLineModel alloc] init];
                model = self.dataArray[i];
                NSString *str = model.videoName;
                // 作品名字的拼接
                self.contentString  = [NSString stringWithFormat:@"%@  <<%@>>", self.contentString, str];
            }
            // 使用自定义界面分享URL图片
            UMSocialUrlResource *urlResoure = [[UMSocialUrlResource alloc] initWithSnsResourceType:UMSocialUrlResourceTypeImage url:self.model.previewImage];
            
            [[UMSocialDataService defaultDataService]  postSNSWithTypes:@[way] content:self.contentString image:nil location:nil urlResource:urlResoure presentedController:self completion:^(UMSocialResponseEntity *shareResponse){
                if (shareResponse.responseCode == UMSResponseCodeSuccess) {
                    [self showAlterViewWithTitle:@"提示" Message:@"分享成功"];
                }
            }];
        }
    });
}

// 提示框消失
- (void) actionAlert
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)showAlterViewWithTitle:(NSString *)title Message:(NSString *)message
{
    UIAlertController *alertView = [UIAlertController alertControllerWithTitle:title message:message preferredStyle:UIAlertControllerStyleAlert];
    [self performSelector:@selector(closeAlter:) withObject:alertView afterDelay:1];
    [self presentViewController:alertView animated:YES completion:nil];
}

// 设置1秒之后消失
- (void)closeAlter:(UIAlertController *)alert
{
    [alert dismissViewControllerAnimated:YES completion:nil];
}


// 解析导演数据
- (void)setUpDirectData
{
    dispatch_async(dispatch_get_global_queue(0, 0), ^{
        NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"%@%@%@", kTopDetalis, self.model.topicId, kTopDeta]];
        NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:30.0];
        [request setHTTPMethod:@"GET"];
        NSURLSessionConfiguration *config = [NSURLSessionConfiguration ephemeralSessionConfiguration];
        NSURLSession *session = [NSURLSession sessionWithConfiguration:config];
        NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {
            if (!data) {
                [SVProgressHUD showErrorWithStatus:@"加载失败"];
                return;
            }
            NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
            self.directArray = [NSMutableArray array];
            NSMutableDictionary *dataDic = [dic valueForKey:@"resultData"];
                self.model = [[TopModel alloc] init];
                [self.model setValuesForKeysWithDictionary:dataDic];
                [self.directArray addObject:self.model];
            dispatch_async(dispatch_get_main_queue(), ^{
                 CGFloat height = [TopDetalisCollectionReusableView cellWithModel:self.model];
                //必须加载页面, 或者刷新页面, 不然外部拿不到数据
              [self addSubViewWithHeight:height];
                 [self addMoreButton];
            });
        }];
        [dataTask resume];
        
    });

}
// 解析作品数据
- (void)setUpData
{
    dispatch_async(dispatch_get_global_queue(0, 0), ^{
        NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"%@%@%@", kMovieTopDetalis, self.model.topicId, kMovieTopDeta]];
        NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:30.0];
        [request setHTTPMethod:@"GET"];
        NSURLSessionConfiguration *config = [NSURLSessionConfiguration ephemeralSessionConfiguration];
        NSURLSession *session = [NSURLSession sessionWithConfiguration:config];
        NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {
            NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
            self.dataArray = [NSMutableArray array];
            NSMutableDictionary *dataDic = [dic valueForKey:@"resultData"];
            NSMutableArray *array = [dataDic valueForKey:@"videoList"];
            for (NSMutableDictionary *dic in array) {
                HeadLineModel *model = [[HeadLineModel alloc] init];
                [model setValuesForKeysWithDictionary:dic];
                [self.dataArray addObject:model];
            }
            dispatch_async(dispatch_get_main_queue(), ^{
                 [self.collectionView reloadData];
            });
        }];
        [dataTask resume];
    });
}


- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.dataArray.count;
}
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    TopDetailsCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"Cell" forIndexPath:indexPath];
    if (self.dataArray.count > 0) {
        cell.model = self.dataArray[indexPath.row];
    }
    
    return cell;
}

// 设置表头
- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    if ([kind isEqualToString:UICollectionElementKindSectionHeader]) {
        TopDetalisCollectionReusableView *headView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"Header" forIndexPath:indexPath];
        headView.model = self.directArray[indexPath.row];
        headView.lableModel = self.directArray[indexPath.row];
        return headView;
    }
    return nil;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    // 发送通知
    HeadLineModel *model = self.dataArray[indexPath.row];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"TOPTHIRD" object:@{@"videoName":model.videoName, @"videoId":model.videoId}];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
